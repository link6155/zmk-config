/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// -----------------------------------------------------------------------------------------
				// | ESC/~ |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   | BSPC  |
				// | TAB   |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   | RET   |
				// | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |SQT/SFT|
				// | PLAY  | LCTL | LALT | LGUI | LOWR |     SPACE    |  RAIS | LARW | DARW | UARW  |  RARW |
			bindings = <
				&gresc    &kp Q    &kp W &kp E &kp R &kp T  &kp Y   &kp U  &kp I    &kp O   &kp P    &kp BSPC
				&kp TAB   &kp A    &kp S &kp D &kp F &kp G  &kp H   &kp J  &kp K    &kp L   &kp SEMI &kp RET
				&kp LSHFT &kp Z    &kp X &kp C &kp V &kp B  &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT SQT
				&kp C_PP &kp LGUI &kp LALT &kp LCTRL &mo 1 &kp SPACE &kp SPACE &mo 2 &kp LEFT &kp DOWN &kp UP &kp RIGHT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		lower {
				// -----------------------------------------------------------------------------------------
				// |  ~    |  !   |  @   |  #   |  $   |  %   |   ^   |  &    |  *   |  (   |   )   |   _   |
				// |  /    |  N7  |  N8  |  N9  |  -   |  NLCK|   F1  |  F2   |  F3  |  F4  |  F5   |   =   |
				// |  *    |  N4  |  N5  |  N6  |  +   |  N=  |   F6  |  F7   |  F8  |  F9  |  F10  | TRANS |
				// |  N0   |  N1  |  N2  |  N3  | TRANS|      DOT     |  MO3  |  F11 |  F12 |  TRANS| TRANS |
			bindings = <
				&kp LS(GRAVE)   &kp LS(N1)   &kp LS(N2)  &kp LS(N3)  &kp LS(N4)    &kp LS(N5)    &kp LS(N6)    &kp LS(N7)    &kp LS(N8)    &kp LS(N9)    &kp LS(N0)    &kp LS(MINUS)
				&kp KP_DIVIDE   &kp KP_N7    &kp KP_N8   &kp KP_N9   &kp KP_MINUS  &kp LNLCK     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp EQUAL
				&kp KP_MULTIPLY &kp KP_N4    &kp KP_N5   &kp KP_N6   &kp KP_PLUS   &kp KP_EQUAL  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
				&kp KP_N0       &kp KP_N1    &kp KP_N2   &kp KP_N3   &kp KP_DOT    &kp KP_DOT    &trans        &mo 3         &kp F11       &kp F12       &trans        &trans
			>;

			sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
		};

		raise {
				// -----------------------------------------------------------------------------------------
				// |  `    |  1   |  2   |  3   |  4   |  5   |  6    |  7    |  8   |  9   |  0    |  DEL  |
				// |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |  F2   |  UP  |  F4  |  F5   |   =   |
				// |  *    |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  | LEFT  | DOWN | RIGHT|  F10  | TRANS |
				// | TRANS | TRANS| TRANS| TRANS| MO3  |     TRANS    | TRANS | MUTE | VOLDN| VOLUP|  TRANS |
			bindings = <
				&kp GRAVE   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8     &kp N9        &kp N0       &kp DEL
				&kp DEL     &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp MINUS &kp UP     &kp LBKT      &kp RBKT     &kp BSLH
				&trans      &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12   &kp LEFT  &kp DOWN   &kp RIGHT     &trans       &trans
				&trans      &trans    &trans    &trans    &mo 3     &trans    &trans    &trans    &kp C_MUTE &kp C_VOL_DN  &kp C_VOL_UP &kp C_PP
			>;
			
			sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
		};
		
		control {
			bindings = <
				&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &reset
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&bootloader &trans &trans &trans &trans &trans &trans &trans &bt BT_PRV &trans &trans &bt BT_NXT
			>;
		};
	};
};
